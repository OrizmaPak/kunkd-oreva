import { useEffect } from "react";
import { Link, useNavigate } from "react-router-dom";
import { Modal, Skeleton } from "@mantine/core";
import { useDisclosure } from "@mantine/hooks";

import { useGetProfile } from "@/api/queries";
import useStore from "@/store";
import { getProfileState } from "@/store/profileStore";
import { getUserState } from "@/store/authStore";

import ParentUpdateModal from "./ParentUpdateModal";
import KundaLogo from "@/assets/KundaLogo.svg";
import BgImage from "@/assets/newBackground.svg";

/* =========================
   Types
========================= */
export type selectAvatarType = {
  id: number;
  name: string;
  accepted_summer_challenge: boolean;
  student?: { class_name: string };
};

/* =========================
   Page
========================= */
const SelectProfile = ({
  setChildProfile,
}: {
  setChildProfile: (val: string) => void;
}) => {
  const [profiles] = useStore(getProfileState);
  const [user] = useStore(getUserState);
  const { isLoading } = useGetProfile();
  const [opened, { open, close }] = useDisclosure(false);

  const navigate = useNavigate();

  useEffect(() => {
    if (user?.country_id === 0) open();
  }, [user?.country_id, open]);

  return (
    <>
      {/* Background illustration */}
      <div className="relative min-h-screen w-full overflow-hidden">
        <img
          src={BgImage}
          alt=""
          aria-hidden="true"
          className="pointer-events-none absolute inset-0 h-full w-full object-cover"
        />

        {/* Right-aligned card container */}
        <div className="relative z-10 flex min-h-screen items-center justify-end px-4 sm:px-8 lg:px-12">
          <section className="w-full max-w-[520px] overflow-auto max-h-[90vh] rounded-[50px] bg-white/95 p-6 shadow-md backdrop-blur md:p-8">
            {/* Logo */}
            <div className="mb-5 flex justify-center md:mb-12">
              <img src={KundaLogo} alt="Kunda Kids" className="w-[160px] h-[34px] opacity-100" />
            </div>

            {/* Title & subtext */}
            <div className="text-center">
              <h1 className="font-[600] font-BalooSemiBold text-[36px] leading-[32px] tracking-[-0.2px] text-[#2C3137]">
                Welcome to Kunda Kids
              </h1>
              <p className="mt-1 text-sm font-Arimo text-gray-500">
                To begin, create a profile for your child.
              </p>
            </div>

            {/* Kids grid (if any) */}
            {!isLoading && profiles && profiles.length > 0 && (
              <div className="mt-6">
                <KidsGrid
                  profiles={profiles}
                  setChildProfile={setChildProfile}
                />
              </div>
            )}

            {/* Loading state */}
            {isLoading && (
              <div className="mt-6 grid grid-cols-2 gap-4 sm:grid-cols-3">
                {Array.from({ length: 6 }).map((_, i) => (
                  <div
                    key={`s-${i}`}
                    className="rounded-2xl border border-gray-100 p-4 text-center"
                  >
                    <Skeleton height={64} circle className="mx-auto" />
                    <Skeleton height={10} mt={12} />
                    <Skeleton height={10} mt={8} width="60%" className="mx-auto" />
                  </div>
                ))}
              </div>
            )}

            {/* Add Profile block */}
            <div className="mt-8 flex justify-center">
              <AddProfileBlock profiles={profiles?.length || 0} />
            </div>
          </section>
        </div>
      </div>

      {/* Country/phone prompt */}
      <Modal
        opened={opened}
        onClose={close}
        centered
        withCloseButton={false}
        overlayProps={{ opacity: 0.2, blur: 4 }}
        radius="lg"
      >
        <ParentUpdateModal close={close} />
      </Modal>
    </>
  );
};

export default SelectProfile;

/* =========================
   Children Grid
========================= */
const KidsGrid = ({
  profiles,
  setChildProfile,
}: {
  profiles: selectAvatarType[];
  setChildProfile: (val: string) => void;
}) => {
  return (
    <div className="grid grid-cols-2 gap-4 sm:grid-cols-3">
      {profiles.map((kid) => (
        <KidItem key={kid.id} kid={kid} setChildProfile={setChildProfile} />
      ))}
    </div>
  );
};

/* =========================
   Kid Item
========================= */
const KidItem = ({
  kid,
  setChildProfile,
}: {
  kid: selectAvatarType;
  setChildProfile: (val: string) => void;
}) => {
  const navigate = useNavigate();
  const initials = getInitials(kid.name);
  const sub = kid?.student?.class_name?.trim()
    ? kid.student.class_name
    : "Tap to begin";

  const handle = () => {
    setChildProfile(String(kid.id));
    sessionStorage.setItem("profileId", String(kid.id));
    navigate("/schooldashboard/content");
  };

  return (
    <button
      onClick={handle}
      className="group w-full rounded-2xl bg-white p-4 text-center transition hover:shadow-md"
    >
      {kid.image ? (
        <img src={kid.image} alt={kid.name} className="mx-auto h-16 w-16 rounded-full object-cover" />
      ) : (
        <div
          className="mx-auto flex h-16 w-16 items-center justify-center rounded-full text-lg font-bold text-white shadow-sm"
          style={{ backgroundColor: pickColorFromName(kid.name) }}
        >
          {initials}
        </div>
      )}
      <div className="mt-3 text-sm font-Inter font-medium text-gray-900">
        {capitalize(kid.name)}
      </div>
      <div className="mt-1 text-xs text-gray-500 hidden">{sub}</div>
    </button>
  );
};

/* =========================
   Add Profile (Plus)
========================= */
const AddProfileBlock = ({ profiles }: { profiles: number }) => {
  const navigate = useNavigate();
  return (
    <button
      className={`flex flex-col items-center scale-80 ${profiles >= 4 ? 'opacity-50 cursor-not-allowed' : ''}`}
      aria-label="Add Profile"
      onClick={() => navigate("/profilesetup")}
      disabled={profiles >= 4}
    >
      <svg width="90" height="129" viewBox="0 0 90 129" fill="none" xmlns="http://www.w3.org/2000/svg">
          <g clip-path="url(#clip0_965_85202)">
          <path d="M65.97 0C81.27 0 90 8.64 90 23.985V66.015C90 81.27 81.315 90 66.015 90H23.985C8.64 90 0 81.27 0 66.015V23.985C0 8.64 8.64 0 23.985 0H65.97ZM44.955 24.795C42.885 24.795 41.22 26.46 41.22 28.53V41.22H28.485C27.495 41.22 26.55 41.625 25.83 42.3C25.155 43.02 24.75 43.9605 24.75 44.955C24.75 47.025 26.415 48.69 28.485 48.735H41.22V61.47C41.22 63.54 42.885 65.205 44.955 65.205C47.025 65.205 48.69 63.54 48.69 61.47V48.735H61.47C63.54 48.69 65.205 47.025 65.205 44.955C65.205 42.885 63.54 41.22 61.47 41.22H48.69V28.53C48.69 26.46 47.025 24.795 44.955 24.795Z" fill="#9FC43E"/>
          </g>
          <path d="M7.54931 112.592C7.73065 112.485 8.00265 112.384 8.36531 112.288C8.73865 112.192 9.11198 112.144 9.48531 112.144C10.0186 112.144 10.488 112.224 10.8933 112.384C11.3093 112.533 11.576 112.773 11.6933 113.104C11.8853 113.659 12.0933 114.304 12.3173 115.04C12.5413 115.776 12.7653 116.539 12.9893 117.328C13.2133 118.107 13.432 118.88 13.6453 119.648C13.8586 120.405 14.0453 121.077 14.2053 121.664C14.0773 121.813 13.8853 121.931 13.6293 122.016C13.3733 122.112 13.0693 122.16 12.7173 122.16C12.4613 122.16 12.2426 122.139 12.0613 122.096C11.8906 122.053 11.7466 121.989 11.6293 121.904C11.5226 121.819 11.432 121.707 11.3573 121.568C11.2933 121.429 11.2346 121.269 11.1813 121.088L10.8933 119.984H7.99731C7.91198 120.304 7.82665 120.635 7.74131 120.976C7.65598 121.317 7.57065 121.648 7.48531 121.968C7.33598 122.021 7.17598 122.064 7.00531 122.096C6.84531 122.139 6.64798 122.16 6.41331 122.16C5.86931 122.16 5.46398 122.069 5.19731 121.888C4.94131 121.696 4.81331 121.435 4.81331 121.104C4.81331 120.955 4.83465 120.805 4.87731 120.656C4.91998 120.507 4.96798 120.331 5.02131 120.128C5.09598 119.84 5.19731 119.483 5.32531 119.056C5.46398 118.629 5.61331 118.171 5.77331 117.68C5.93331 117.179 6.10398 116.667 6.28531 116.144C6.46665 115.621 6.63731 115.131 6.79731 114.672C6.95731 114.203 7.10131 113.787 7.22931 113.424C7.36798 113.061 7.47465 112.784 7.54931 112.592ZM9.46931 114.656C9.31998 115.104 9.14931 115.605 8.95731 116.16C8.77598 116.704 8.61065 117.259 8.46131 117.824H10.4453C10.296 117.248 10.1413 116.688 9.98131 116.144C9.83198 115.589 9.69331 115.093 9.56531 114.656H9.46931ZM14.8476 118.112C14.8476 117.408 14.9542 116.8 15.1676 116.288C15.3809 115.765 15.6742 115.333 16.0476 114.992C16.4316 114.651 16.8742 114.4 17.3756 114.24C17.8876 114.069 18.4369 113.984 19.0236 113.984C19.2369 113.984 19.4449 114.005 19.6476 114.048C19.8502 114.08 20.0156 114.123 20.1436 114.176V111.584C20.2502 111.552 20.4209 111.52 20.6556 111.488C20.8902 111.445 21.1302 111.424 21.3756 111.424C21.6102 111.424 21.8182 111.44 21.9996 111.472C22.1916 111.504 22.3516 111.568 22.4796 111.664C22.6076 111.76 22.7036 111.893 22.7676 112.064C22.8316 112.224 22.8636 112.437 22.8636 112.704V120.288C22.8636 120.789 22.6289 121.189 22.1596 121.488C21.8502 121.691 21.4502 121.867 20.9596 122.016C20.4689 122.176 19.9036 122.256 19.2636 122.256C18.5702 122.256 17.9462 122.16 17.3916 121.968C16.8476 121.776 16.3836 121.499 15.9996 121.136C15.6262 120.773 15.3382 120.341 15.1356 119.84C14.9436 119.328 14.8476 118.752 14.8476 118.112ZM19.3916 116.112C18.8156 116.112 18.3729 116.277 18.0636 116.608C17.7542 116.939 17.5996 117.44 17.5996 118.112C17.5996 118.773 17.7436 119.275 18.0316 119.616C18.3196 119.947 18.7356 120.112 19.2796 120.112C19.4716 120.112 19.6422 120.085 19.7916 120.032C19.9516 119.968 20.0742 119.899 20.1596 119.824V116.304C19.9462 116.176 19.6902 116.112 19.3916 116.112ZM24.2226 118.112C24.2226 117.408 24.3292 116.8 24.5426 116.288C24.7559 115.765 25.0492 115.333 25.4226 114.992C25.8066 114.651 26.2492 114.4 26.7506 114.24C27.2626 114.069 27.8119 113.984 28.3986 113.984C28.6119 113.984 28.8199 114.005 29.0226 114.048C29.2252 114.08 29.3906 114.123 29.5186 114.176V111.584C29.6252 111.552 29.7959 111.52 30.0306 111.488C30.2652 111.445 30.5052 111.424 30.7506 111.424C30.9852 111.424 31.1932 111.44 31.3746 111.472C31.5666 111.504 31.7266 111.568 31.8546 111.664C31.9826 111.76 32.0786 111.893 32.1426 112.064C32.2066 112.224 32.2386 112.437 32.2386 112.704V120.288C32.2386 120.789 32.0039 121.189 31.5346 121.488C31.2252 121.691 30.8252 121.867 30.3346 122.016C29.8439 122.176 29.2786 122.256 28.6386 122.256C27.9452 122.256 27.3212 122.16 26.7666 121.968C26.2226 121.776 25.7586 121.499 25.3746 121.136C25.0012 120.773 24.7132 120.341 24.5106 119.84C24.3186 119.328 24.2226 118.752 24.2226 118.112ZM28.7666 116.112C28.1906 116.112 27.7479 116.277 27.4386 116.608C27.1292 116.939 26.9746 117.44 26.9746 118.112C26.9746 118.773 27.1186 119.275 27.4066 119.616C27.6946 119.947 28.1106 120.112 28.6546 120.112C28.8466 120.112 29.0172 120.085 29.1666 120.032C29.3266 119.968 29.4492 119.899 29.5346 119.824V116.304C29.3212 116.176 29.0652 116.112 28.7666 116.112ZM40.9767 116.8C41.4247 116.8 41.766 116.699 42.0007 116.496C42.246 116.283 42.3687 115.963 42.3687 115.536C42.3687 115.131 42.2407 114.821 41.9847 114.608C41.7394 114.384 41.3767 114.272 40.8967 114.272C40.726 114.272 40.582 114.277 40.4647 114.288C40.358 114.288 40.246 114.299 40.1287 114.32V116.8H40.9767ZM40.1447 121.936C40.0274 121.968 39.8407 122 39.5847 122.032C39.3394 122.064 39.094 122.08 38.8487 122.08C38.6034 122.08 38.3847 122.059 38.1927 122.016C38.0114 121.984 37.8567 121.92 37.7287 121.824C37.6007 121.728 37.5047 121.595 37.4407 121.424C37.3767 121.253 37.3447 121.029 37.3447 120.752V113.216C37.3447 112.992 37.4034 112.821 37.5207 112.704C37.6487 112.576 37.8194 112.475 38.0327 112.4C38.3954 112.272 38.806 112.181 39.2647 112.128C39.734 112.064 40.2034 112.032 40.6727 112.032C42.1447 112.032 43.27 112.347 44.0487 112.976C44.8274 113.605 45.2167 114.459 45.2167 115.536C45.2167 116.059 45.1314 116.533 44.9607 116.96C44.8007 117.376 44.5554 117.739 44.2247 118.048C43.9047 118.347 43.494 118.581 42.9927 118.752C42.502 118.912 41.9314 118.992 41.2807 118.992H40.1447V121.936ZM48.8411 121.984C48.7344 122.016 48.5637 122.048 48.3291 122.08C48.1051 122.112 47.8704 122.128 47.6251 122.128C47.3904 122.128 47.1771 122.112 46.9851 122.08C46.8037 122.048 46.6491 121.984 46.5211 121.888C46.3931 121.792 46.2917 121.664 46.2171 121.504C46.1531 121.333 46.1211 121.115 46.1211 120.848V116.048C46.1211 115.803 46.1637 115.595 46.2491 115.424C46.3451 115.243 46.4784 115.083 46.6491 114.944C46.8197 114.805 47.0277 114.683 47.2731 114.576C47.5291 114.459 47.8011 114.357 48.0891 114.272C48.3771 114.187 48.6757 114.123 48.9851 114.08C49.2944 114.027 49.6037 114 49.9131 114C50.4251 114 50.8304 114.101 51.1291 114.304C51.4277 114.496 51.5771 114.816 51.5771 115.264C51.5771 115.413 51.5557 115.563 51.5131 115.712C51.4704 115.851 51.4171 115.979 51.3531 116.096C51.1291 116.096 50.8997 116.107 50.6651 116.128C50.4304 116.149 50.2011 116.181 49.9771 116.224C49.7531 116.267 49.5397 116.315 49.3371 116.368C49.1451 116.411 48.9797 116.464 48.8411 116.528V121.984ZM60.4503 118.112C60.4503 118.773 60.349 119.365 60.1463 119.888C59.9436 120.4 59.6556 120.832 59.2823 121.184C58.9196 121.536 58.4823 121.803 57.9703 121.984C57.4583 122.165 56.8876 122.256 56.2583 122.256C55.629 122.256 55.0583 122.16 54.5463 121.968C54.0343 121.776 53.5916 121.504 53.2183 121.152C52.8556 120.789 52.573 120.352 52.3703 119.84C52.1676 119.328 52.0663 118.752 52.0663 118.112C52.0663 117.483 52.1676 116.912 52.3703 116.4C52.573 115.888 52.8556 115.456 53.2183 115.104C53.5916 114.741 54.0343 114.464 54.5463 114.272C55.0583 114.08 55.629 113.984 56.2583 113.984C56.8876 113.984 57.4583 114.085 57.9703 114.288C58.4823 114.48 58.9196 114.757 59.2823 115.12C59.6556 115.472 59.9436 115.904 60.1463 116.416C60.349 116.928 60.4503 117.493 60.4503 118.112ZM54.8503 118.112C54.8503 118.763 54.973 119.264 55.2183 119.616C55.4743 119.957 55.8263 120.128 56.2743 120.128C56.7223 120.128 57.0636 119.952 57.2983 119.6C57.5436 119.248 57.6663 118.752 57.6663 118.112C57.6663 117.472 57.5436 116.981 57.2983 116.64C57.053 116.288 56.7063 116.112 56.2583 116.112C55.8103 116.112 55.4636 116.288 55.2183 116.64C54.973 116.981 54.8503 117.472 54.8503 118.112ZM61.8093 114.224C61.8093 113.68 61.9 113.216 62.0813 112.832C62.2733 112.437 62.5293 112.117 62.8493 111.872C63.1693 111.616 63.5426 111.429 63.9693 111.312C64.4066 111.195 64.8706 111.136 65.3613 111.136C66.1506 111.136 66.732 111.243 67.1053 111.456C67.4786 111.659 67.6653 112.011 67.6653 112.512C67.6653 112.725 67.6173 112.917 67.5213 113.088C67.436 113.259 67.34 113.387 67.2333 113.472C67.0306 113.419 66.8173 113.376 66.5933 113.344C66.38 113.301 66.1293 113.28 65.8413 113.28C65.3826 113.28 65.0253 113.36 64.7693 113.52C64.5133 113.669 64.3853 113.936 64.3853 114.32V114.832H67.0093C67.0733 114.949 67.132 115.099 67.1853 115.28C67.2493 115.451 67.2813 115.643 67.2813 115.856C67.2813 116.229 67.196 116.501 67.0253 116.672C66.8653 116.832 66.6466 116.912 66.3693 116.912H64.5293V121.984C64.4226 122.016 64.252 122.048 64.0173 122.08C63.7933 122.112 63.5586 122.128 63.3133 122.128C63.0786 122.128 62.8653 122.112 62.6733 122.08C62.492 122.048 62.3373 121.984 62.2093 121.888C62.0813 121.792 61.98 121.664 61.9053 121.504C61.8413 121.333 61.8093 121.115 61.8093 120.848V114.224ZM68.5453 112.064C68.5453 111.659 68.6786 111.317 68.9453 111.04C69.2226 110.763 69.5853 110.624 70.0333 110.624C70.4813 110.624 70.8386 110.763 71.1053 111.04C71.3826 111.317 71.5213 111.659 71.5213 112.064C71.5213 112.469 71.3826 112.811 71.1053 113.088C70.8386 113.365 70.4813 113.504 70.0333 113.504C69.5853 113.504 69.2226 113.365 68.9453 113.088C68.6786 112.811 68.5453 112.469 68.5453 112.064ZM71.3933 121.984C71.276 122.005 71.1 122.032 70.8653 122.064C70.6413 122.107 70.412 122.128 70.1773 122.128C69.9426 122.128 69.7293 122.112 69.5373 122.08C69.356 122.048 69.2013 121.984 69.0733 121.888C68.9453 121.792 68.844 121.664 68.7693 121.504C68.7053 121.333 68.6733 121.115 68.6733 120.848V114.336C68.7906 114.315 68.9613 114.288 69.1853 114.256C69.42 114.213 69.6546 114.192 69.8893 114.192C70.124 114.192 70.332 114.208 70.5133 114.24C70.7053 114.272 70.8653 114.336 70.9933 114.432C71.1213 114.528 71.2173 114.661 71.2813 114.832C71.356 114.992 71.3933 115.205 71.3933 115.472V121.984ZM75.8891 121.984C75.7717 122.005 75.5957 122.032 75.3611 122.064C75.1371 122.107 74.9077 122.128 74.6731 122.128C74.4384 122.128 74.2251 122.112 74.0331 122.08C73.8517 122.048 73.6971 121.984 73.5691 121.888C73.4411 121.792 73.3397 121.664 73.2651 121.504C73.2011 121.333 73.1691 121.115 73.1691 120.848V111.568C73.2864 111.547 73.4571 111.52 73.6811 111.488C73.9157 111.445 74.1504 111.424 74.3851 111.424C74.6197 111.424 74.8277 111.44 75.0091 111.472C75.2011 111.504 75.3611 111.568 75.4891 111.664C75.6171 111.76 75.7131 111.893 75.7771 112.064C75.8517 112.224 75.8891 112.437 75.8891 112.704V121.984ZM81.7174 122.256C81.0881 122.256 80.5014 122.171 79.9574 122C79.4241 121.819 78.9548 121.552 78.5494 121.2C78.1548 120.848 77.8401 120.405 77.6054 119.872C77.3814 119.339 77.2694 118.715 77.2694 118C77.2694 117.296 77.3814 116.693 77.6054 116.192C77.8401 115.68 78.1441 115.264 78.5174 114.944C78.8908 114.613 79.3174 114.373 79.7974 114.224C80.2774 114.064 80.7681 113.984 81.2694 113.984C81.8348 113.984 82.3468 114.069 82.8054 114.24C83.2748 114.411 83.6748 114.645 84.0054 114.944C84.3468 115.243 84.6081 115.6 84.7894 116.016C84.9814 116.432 85.0774 116.885 85.0774 117.376C85.0774 117.739 84.9761 118.016 84.7734 118.208C84.5708 118.4 84.2881 118.523 83.9254 118.576L79.9734 119.168C80.0908 119.52 80.3308 119.787 80.6934 119.968C81.0561 120.139 81.4721 120.224 81.9414 120.224C82.3788 120.224 82.7894 120.171 83.1734 120.064C83.5681 119.947 83.8881 119.813 84.1334 119.664C84.3041 119.771 84.4481 119.92 84.5654 120.112C84.6828 120.304 84.7414 120.507 84.7414 120.72C84.7414 121.2 84.5174 121.557 84.0694 121.792C83.7281 121.973 83.3441 122.096 82.9174 122.16C82.4908 122.224 82.0908 122.256 81.7174 122.256ZM81.2694 115.968C81.0134 115.968 80.7894 116.011 80.5974 116.096C80.4161 116.181 80.2668 116.293 80.1494 116.432C80.0321 116.56 79.9414 116.709 79.8774 116.88C79.8241 117.04 79.7921 117.205 79.7814 117.376L82.5174 116.928C82.4854 116.715 82.3681 116.501 82.1654 116.288C81.9628 116.075 81.6641 115.968 81.2694 115.968Z" fill="#9FC43E"/>
          <defs>
          <clipPath id="clip0_965_85202">
          <rect width="90" height="90" fill="white"/>
          </clipPath>
          </defs>
      </svg>

    </button>
  );
};

/* =========================
   Helpers
========================= */
function getInitials(name: string) {
  if (!name) return "";
  const parts = name.trim().split(/\s+/);
  const two =
    (parts[0]?.[0] || "") + (parts[1]?.[0] || parts[0]?.[1] || "");
  return two.slice(0, 2).toUpperCase();
}
function capitalize(s: string) {
  if (!s) return "";
  return s.charAt(0).toUpperCase() + s.slice(1);
}
function hashCode(str: string) {
  let h = 0;
  for (let i = 0; i < str.length; i++) {
    h = (h << 5) - h + str.charCodeAt(i);
    h |= 0;
  }
  return Math.abs(h);
}
function pickColorFromName(name: string) {
  const colors = [
    "#7C3AED",
    "#E11D48",
    "#059669",
    "#2563EB",
    "#D97706",
    "#0EA5E9",
    "#16A34A",
    "#DB2777",
  ];
  return colors[hashCode(name) % colors.length];
}
